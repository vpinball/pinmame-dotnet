name: pinmame
on:
  push:
    paths-ignore:
    - "native/**"
    - ".github/workflows/pinmame-native.yml"
  pull_request:
    paths-ignore:
    - "native/**"
    - ".github/workflows/pinmame-native.yml"

defaults:
  run:
    shell: bash

jobs:
  ipdb:
    name: IPDB cache
    runs-on: ubuntu-latest
    steps:
      - id: cache
        uses: actions/cache@v2
        with:
          path: ipdb
          key: cache-ipdb
      - name: Create Cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ipdb
          wget https://www.ipdb.org/files/4032/mm_109c.zip -P ipdb

  build:
    name: Build ${{ matrix.rid }}
    runs-on: ${{ matrix.os }}
    needs: [ ipdb ]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            rid: win-x64
          - os: windows-latest
            rid: win-x86
          - os: macos-latest
            rid: osx-x64
          - os: ubuntu-latest
            rid: linux-x64
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ipdb
          key: cache-ipdb
      - run: |
          mkdir -p ~/.pinmame/roms
          mv ipdb/* ~/.pinmame/roms
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Build
        run: |
          cd src/PinMame.Tests
          dotnet build -c Release -r ${{ matrix.rid }}
      - name: Test
        run: |
          cd src/PinMame.Tests
          dotnet test -r ${{ matrix.rid }}

#  build-nuget:
#    runs-on: ubuntu-latest
#    needs: [ build ]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Build
#        run: |
#          cd src/PinMame 
#          dotnet build -c Release /p:TargetOS=OSX
#          dotnet build -c Release /p:TargetOS=Linux
#      - name: Pack
#        run: |
#          cd src/PinMame 
#          dotnet pack -c Release /p:TargetOS=Windows -o nupkg
#      - uses: actions/upload-artifact@v2
#        with:
#          name: nupkg
#          path: src/PinMame/nupkg
#
#  publish:
#    runs-on: ubuntu-latest
#    needs: [ build-nuget ]
#    if: github.ref == 'refs/heads/master'
#    steps:
#      - uses: nuget/setup-nuget@v1
#      - uses: actions/download-artifact@v2
#        with:
#          name: nupkg
#      - name: Publish
#        run: |
#          nuget push PinMame.*.nupkg -ApiKey ${{ secrets.NUGET_KEY }} -src https://api.nuget.org/v3/index.json
