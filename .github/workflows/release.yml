name: Release
on:
  repository_dispatch:
    types: [ build-complete ]

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      nextVersion: ${{ steps.nextVersion.outputs.nextVersion }}
      nextTag: ${{ steps.nextVersion.outputs.nextTag }}
      commitish: ${{ steps.commit.outputs.commitish }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: nextVersion
        run: |
          sudo apt-get install xmlstarlet
          cd src/PinMame
          VERSION=$(npx semver -i prerelease $(xmlstarlet sel -t -v "//Project/PropertyGroup/PackageVersion" PinMame.csproj))
          xmlstarlet ed -L -u "//Project/PropertyGroup/PackageVersion" -v $VERSION PinMame.csproj
          echo ::set-output name=nextVersion::${VERSION}
          echo ::set-output name=nextTag::"v${VERSION}"
      - name: Commit
        id: commit
        run: |
          git config user.name "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add src/PinMame/PinMame.csproj
          git commit -m "release: ${{ steps.nextVersion.outputs.nextTag }}."
          git push
          commitish=$(git rev-parse HEAD)
          echo ::set-output name=commitish::${commitish}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.nextVersion.outputs.nextTag }}
          release_name: ${{ steps.nextVersion.outputs.nextTag }}
          prerelease: true
          commitish: ${{ steps.commit.outputs.commitish }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dispatch:
    runs-on: ubuntu-latest
    needs: [ release ]
    steps:
      - uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GH_PAT }}
          event-type: release-complete
          client-payload: '{ "run_id": "${{ github.run_id }}",
            "nextVersion": "${{ needs.release.outputs.nextVersion }}",
            "nextTag": "${{ needs.release.outputs.nextTag }}",
            "commitish": "${{ needs.release.outputs.commitish }}" }'
